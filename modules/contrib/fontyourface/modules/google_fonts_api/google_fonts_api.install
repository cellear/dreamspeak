<?php

/**
 * @file
 * Removes fonts on disable.
 */

/**
 * Implements hook_install().
 */
function google_fonts_api_install() {
  config_set('fontyourface.settings', 'google_fonts_api_key', '');
}

/**
 * Implements hook_enable().
 */
function google_fonts_api_enable() {

  // Set weight to 1 to ensure google_fonts_api_preprocess_page() is executed after
  // fontyourface_preprocess_page(), which has weight of 0.
  db_update('system')
    ->fields(array('weight' => 1))
    ->condition('name', 'google_fonts_api')
    ->execute();

  // Import/update fonts
  fontyourface_import_fonts('google_fonts_api');

} // google_fonts_api_enable

/**
 * Implements hook_disable().
 */
function google_fonts_api_disable() {

  fontyourface_provider_disable('google_fonts_api');

} // google_fonts_api_disable

/**
 * Implements hook_uninstall().
 */
function google_fonts_api_uninstall() {
  config_clear('fontyourface.settings', 'google_fonts_api_key');

  // Remove views
  // We need to be explicit so we don't remove a user's custom views.
  $names = array(
    'views.view.google_fonts_api_browse',
  );

  foreach ($names as $config_name) {
    $config = config($config_name);
    $config->delete();
  }
  // Clear admin bar cache to remove views from menu
  cache('admin_bar')->flush();
}

/**
 * Convert variables to config.
 */
function google_fonts_api_update_1000() {
  $config = config('fontyourface.settings');
  $config->set('google_fonts_api_key', update_variable_get('google_fonts_api_key', ''));
  $config->save();

  update_variable_del('google_fonts_api_key');
}

/**
 * Create google_fonts_api_browse view if it doesn't exist already.
 */
function google_fonts_api_update_1001() {

  // See if there is already a fontyourface_browse view on this site.
  $config = config('views.view.google_fonts_api_browse');
  if ($config->isNew()) {
    // If not, create the new google_fonts_api_browse view.
    $path = backdrop_get_path('module', 'google_fonts_api') . '/config/';
    $contents = file_get_contents($path . 'views.view.google_fonts_api_browse.json');
    $data = json_decode($contents, true);
    $config->setData($data);
    $config->save();
  }
}
